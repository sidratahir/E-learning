Information Retrieval and Web Search Engines
Wolf-Tilo Balke
Lecture 5: Latent Semantic Indexing May 4th, 2017
• Many information retrieval models assume independent (orthogonal) terms • This is problematic (synonyms, …) • What can we do? Use independent “topics” instead of terms! • What do we need? – How to relate single terms to topics? – How to relate documents to topics? – How to relate query terms to topics?
Independence
2Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Naïve approach: 1. Find a librarian who knows the subject area of your document collection well enough 2. Let him/her identify independent topics 3. Let him/her assign documents to topics • A document about sports gets a weight of -1.1 with respect to the topic “politics” • A document about the vector space model gets a weight of 2.7 with respect to the topic “information retrieval” 4. Find a method to transform queries over terms into queries over topics (e.g. by exploiting term/topic assignments provided by the librarian)
Dealing with Topics
3Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
The easy part…
The difficult part…
Can it be automated?
• Latent Semantic Indexing does the trick • Proposed by Dumais et al. (1988) • Patented in 1988 (US Patent 4,839,853)
• Central idea: Represent each document within a “latent space of topics” • Use singular value decomposition (SVD) to derive the structure of this space • The SVD is an important result from linear algebra
Latent Semantic Indexing
4Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Lecture 5: Latent Semantic Indexing
1. Recap of Linear Algebra 2. Singular Value Decomposition 3. Latent Semantic Indexing
5Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Linear algebra is the branch of mathematics concerned with the study of: – systems of linear equations, – vectors, – vector spaces, and – linear transformations (represented by matrices).
• Important tool in… – Information retrieval – Data compression – …
Linear Algebra
6Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Vectors represent points in space • There are: – Row vectors:
– Column vectors:
• All vectors (and matrices) considered in this course will be real-valued
Vectors
7Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Transpose
• Every (m × n)-matrix A defines a linear map from Rn to Rm by sending the column vector x ? Rn to the column vector Ax ? Rm:
Matrices
8Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Row i
Column j
Matrix Gallery
9Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
n
n
n ? m
m
n
n
0
0
n
n
0
01
1 Square matrix Diagonal matrix Identity matrix
Rectangular matrix Symmetric matrix
(ai, j) = (aj, i)
n
n
• A set {x(1), …, x(k)} of n-dimensional vectors is linearly dependent if there are real numbers ?1, …, ?k, not all zero, such that
• Otherwise, this set is called linearly independent • Theorem: If k > n, the set is linearly dependent
Linear Independence
10Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Null vector
• Let {x(1), …, x(k)} be a set of n-dimensional vectors • The linear span (aka linear hull) of this set is defined as:
• Idea: The linear span is the set of all points in Rn that can be expressed by linear combinations of x(1), …, x(k) • The linear span is a subspace of Rn with dimension at most k
Linear Span
11Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Linear combination
• The span of {x(1), …, x(k)} can be: – A single point (0-dimensional) – A line (1-dimensional) – A plane (2-dimensional) – …
• Example: span{(1, 2, 3), (2, 4, 6), (3, 6, 9)} is a line in R3
• Example: span{(1, 0, 0), (0, 1, 0), (0, 0, 1)} = R3
Linear Span (2)
12Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Let {x(1), …, x(k)} be a set of linearly independent n-dimensional vectors
• Theorem: span{x(1), …, x(k)} is a k-dimensional subspace of Rn
• Theorem: Any point in span{x(1), …, x(k)} is generated by a unique linear combination of x(1), …, x(k)
• {x(1), …, x(k)} is called a basis of the subset it spans
Basis
13Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Two bases of R2: – B1 = {(1, 0), (0, 1)}  (standard basis) – B2 = {(1, 1), (2, 3)}
• What are the coordinates of standard basis’ point (3, 4) with respect to basis B2?
– B1: 3 · (1, 0) + 4 · (0, 1) = (3, 4) – B2: 1 · (1, 1) + 1 · (2, 3) = (3, 4)
Example
14Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Often it is useful to represent data using a non-standard basis:
Non-Standard Bases
15Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Height
Weight
Size
Deviation
• Let B1 = {x(1), …, x(k)} and B2 = {y(1), …, y(k)} be two bases of the same subspace V ? Rn, i.e.,  span B1 = V = span B2
• Theorem: There is a unique transformation matrix T such that Tx(i) = y(i), for any i = 1, …, k
• T can be used to transform the coordinates of points given with respect to base B1 into the corresponding coordinates with respect to base B2
Change of Basis
16Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Two bases of R2: – B1 = {(1, 1), (2, 3)} – B2 = {(0, 1), (3, 0)} • Given a point p with coordinates (1, 1) wrt. base B1 • What are p’s coordinates wrt. base B2?
• T · (1, 1)T = (4, 1)
Example
17Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Scalar product (aka dot product) of vectors x, y ? Rn and length (norm) of a vector x ? Rn:
• Two vectors x, y ? Rn are orthogonal if x · y = 0
Orthogonality
18Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
x
y
a
• Theorem: Any set of mutually orthogonal vectors is linearly independent
• A set of n-dimensional vectors is orthonormal if all vectors are of length 1 and are mutually orthogonal
• A matrix is column-orthonormal if its set of column vectors is orthonormal (row-orthonormality is defined analogously)
Orthonormality
19Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• The rank of a matrix is the number of linearly independent rows in it (or columns; it’s the same)
• The rank of a matrix A can also be defined as the dimension of the image of the linear map f(x) = Ax
• Theorem: The rank of a diagonal matrix is equal to the number of its nonzero diagonal entries
Rank of a Matrix
20Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
is row- and column-orthonormal; its rank is 4
is row-orthonormal; its rank is 3
Example
21Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Let A be a square (n × n)-matrix • Let x ? Rn be a non-zero vector • x is an eigenvector of A if it satisfies the equation Ax = ?x, for some real number ? • Then, ? is called an eigenvalue of A corresponding to the eigenvector x
• Idea: – Eigenvectors are mapped to itself (possibly scaled) – Eigenvalues are the corresponding scaling factors
Eigenvectors and Eigenvalues
22Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Manfred Eigen
• Unit vector x • Vector Ax (image of x) • Eigenvectors multiplied by eigenvalues
• It could be useful to change the basis to the set of eigenvectors…
Example
23Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Source: http://centaur.maths.qmul.ac.uk/Lin_Alg_I
Lecture 5: Latent Semantic Indexing
1. Recap of Linear Algebra 2. Singular Value Decomposition 3. Latent Semantic Indexing
24Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Let A be an (m × n)-matrix (rectangular!) • Let r be the rank of A • Theorem: A can be decomposed such that A = U · S · V, where – U is a column-orthonormal (m × r)-matrix – V is a row-orthonormal (r × n)-matrix – S is a diagonal matrix such that S = diag(s1, …, sr) and s1 = s2 = ? = sr > 0 • The columns of U are called left singular vectors • The rows of V are called right singular vectors • si is referred to as A’s i-th singular value
Singular Value Decomposition
25Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• The linear map A can be split into three mapping steps: – Given x ? Rn, it is Ax = USVx • V maps x into space Rr, • S scales the components of Vx • U maps SVx into space Rm – The same holds for y ? Rm; it is yA = yUSV
Singular Value Decomposition (2)
26Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
A n m = U r m S r r V n r· ·
diagonal, singular values, rank r
columnorthonormal, left singular vectors, rank r
row-orthonormal, right singular vectors, rank r
• We measured the height and weight of several persons:
• Compute the SVD of this data matrix:
Example
27Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Person 1 Person 2 Person 3 Person 4 Person 5 Height 170cm 175cm 182cm 183cm 190cm Weight 69kg 77kg 77kg 85kg 89kg
U S V
Example (2)
28
0.5The columns of this product provide the new basis
Note: Axes are orthogonal, but they do not look like that (due to scaling) Height
Weight
0              20             40             60             80            100           120          140            160      180
2
1 Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• A = USV – U ? Rm×r: column-orthonormal – S ? Rr×r: diagonal – V ? Rr×n: row-orthonormal • Since S is diagonal, A can be written as a sum of matrices:
Low Rank Approximation
29Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
First singular value
First left singular vector (column vector)
First right singular vector (row vector)
• The i-th summand is scaled by si • Remember: s1 = s2 = ? = sr > 0 – The first summands are most important – The last ones have low impact on A (if their si’s are small)
• Idea: Get an approximation of A by removing some less important summands • This saves space and could remove small noise in the data
Low Rank Approximation (2)
30Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Rank-k approximation of A (for any k = 0, …, r):
• Let Uk denote the matrix U after removing the columns k + 1 to r • Let Sk denote the matrix S after removing both the rows and columns k + 1 to r • Let Vk denote the matrix V after removing the rows k + 1 to r • Then it is Ak = Uk · Sk · Vk
Low Rank Approximation (3)
31Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Rank-k approximation of A (for any k = 0, …, r):
• How large is the approximation error? • The error can be measured using the Frobenius distance • The Frobenius distance of two matrices A, B ? Rm×n is:
• Roughly the same as the mean squared entry-wise error
Low Rank Approximation (4)
32Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Theorem: For any (m × n)-matrix B of rank at most k, it is dF(A, B) = dF(A, Ak)
• Therefore, Ak is an optimal rank-k approximation of A
Low Rank Approximation (5)
33Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Theorem: It is
• If the singular values starting at sk+1 are “small enough,” the approximation Ak is “good enough”
Low Rank Approximation (6)
34Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Let’s ignore the second axis…
Example
35Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
0.5
Idea: Project data points into a 1-dimensional subspace of the original 2-dimensional space, while minimizing the error introduced by this projection.
0              20             40             60             80            100           120          140            160      180
• SVD:
• Rank-1 approximation:
Example (2)
36Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Let A be an (m × n)-matrix and A = USV its SVD • Then:
• Theorem: U’s columns are the eigenvectors of AAT, the matrix S2 contains the corresponding eigenvalues • Similarly, V’s rows are the eigenvectors of ATA, S2 again contains the eigenvalues
Connection to Eigenvectors
37Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
V is row-orthonormal, i.e. VVT = I
S2 is still diagonal (entries got squared)
Lecture 5: Latent Semantic Indexing
1. Recap of Linear Algebra 2. Singular Value Decomposition 3. Latent Semantic Indexing
38Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Idea of Dumais et al. (1988): Apply the SVD to a term–document matrix! • The r intermediate dimensions correspond to “topics” – Terms that usually occur together get bundled (synonyms) – Terms having several meanings get assigned to several topics (polysemes) • Discarding dimensions having small singular values removes “noise” from the data… – Low rank approximations enhance data quality!
Latent Semantic Indexing
39Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Example from (Berry et al., 1995):
• A small collection of book titles
Example
Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig 40
• Term–document matrix (binary, since no term occured more than once):
Example (2)
Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig 41
• The first two dimensions of the SVD:
• Books and terms are plotted using the new basis’ coordinates
• Similar terms have similar coordinates
Example (3)
Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig 42
• How to exactly map documents and terms into the latent space? • Recall:  Ak = UkSkVk • To get rid of the scaling factors (singular values), Sk usually is split up and moved into Uk and Vk: – Let Sk1/2 denote the matrix that results from extracting square roots from Sk (entry-wise) – Define Uk’ = UkSk1/2 and Vk’ = Sk1/2Vk, which gives Ak = Uk’Vk’ • Then: – The latent space coordinates of the j-th document are given by the j-th column of Vk’ – The i-th term’s coordinates are given by the i-th row of Uk’
Mapping into Latent Space
43Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• How does querying work? • Idea: Map the query vector q ? Rm into the latent space • But: How to map new documents/queries into the latent space? • Let q’ ? Rk denote the query’s (yet unknown) coordinates in latent space • Assuming that q and q’ are column vectors, we know that the following must be true (by definition of the SVD):
Processing Queries
44Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Now, let’s solve this equation with respect to q’: – Multiply by UkT on the left-hand side:
– Multiply by Sk-1/2 (the entry-wise reciprocal of S1/2):
• Thus, finally:
Processing Queries (2)
45Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Example
• Query = “application theory”
• All books within the shaded area have a cosine similarity to the query of at least 0.9
Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig 46
• Example by Mark Girolami (University of Glasgow)
• Documents from a collection of Usenet postings
Another Example
47Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Another Example (2)
48Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Another Example (3)
49Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Reuters-21578 collection – 21578 short newswire messages from 1987 • Top-3 results when querying for taxes reagan using LSI:
– The last document doesn’t mention the term “reagan”!
Yet Another Example
FITZWATER SAYS REAGAN STRONGLY AGAINST TAX HIKE WASHINGTON, March 9 -White House spokesman Marlin Fitzwater said President Reagan's record in opposing tax hikes is "long and strong" and not about to change.
ROSTENKOWSKI SAYS WILL BACK U.S. TAX HIKE, BUT DOUBTS PASSAGE WITHOUT REAGAN SUPPORT
WHITE HOUSE SAYS IT OPPOSED TO TAX INCREASE AS UNNECESSARY
Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig 50
• Use a model similar to neural networks • Example: m = 3, n = 4
A Different View on LSI
51Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
1 2Rows
Columns 1 2 3 4
3
121 11
109
2
3
4
5
6
7
8
• SVD representation:
A Different View on LSI (2)
52Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Rows
Columns 2 3 4
.2
1 2
1 2 3
1
rank(A) = 2
.9
.5 .3
.8
-.3
.4 .5
.5 .6- .7
-.3
.2 .6
For a given column, its rows in V represent the column’s connections’ strength to the topics
• Reconstruction of A by multiplication:
• a2, 1 =    0.5 · 25.4 · 0.4 + 0.3 · 1.7 · (-0.7) = 5.08 - 0.357 ˜ 5 (rounding errors)
A Different View on LSI (3)
53Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Rows
Columns 2 3 4
.2
1 2
1 2 3
1
.9
.5 .3
.8
-.3
.4 .5
.5 .6- .7
-.3
.2 .6
• What does this mean for term–document matrices?
A Different View on LSI (4)
54Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
1 2Terms
Documents 1 2 3 4
3
• What documents contain term 2?
A Different View on LSI (5)
55Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
1 2Terms
Documents 1 2 3 4
3
• The SVD introduces an intermediate layer:
A Different View on LSI (6)
56
Terms
Documents 2 3 4
.32
1 2
1 2 3
1
.91
.93 -.35
.19
.20
.83
.43
.07 .35.44 -.32
.41
-.73
3
-.25
-.11
. 96
-.35
.62 .70 -.08
Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Remove unimportant topics:
A Different View on LSI (7)
57
Terms
Documents 2 3 4
.32
1 2
1 2 3
1
.93
.19
.83
.43
.07 .35
-.25
-.11
. 96
-.35
.62 .70 -.08
Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Computing the SVD on large matrices is at least very difficult – Traditional algorithms require matrices to be kept in memory – There are more specialized algorithm available, but computations still takes a long time on large collections – We have not been able to find any LSI experiment involving more than 1,000,000 documents… – Alternative: Compute LSI on a subset of the data… • Recently, quite simple approximation algorithms have been developed that require much less memory and are relatively fast – For example, based on gradient descent – Maybe those approaches will make LSI easier to use in the future Computing the SVD 58Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• A central question remains: How many dimensions k should be used? • It’s a tradeoff: – Too many dimensions make computation expensive and lead to performance degradation in retrieval (no noise gets filtered out) – Too few dimensions also lead to performance degradation since important topics are left out • The “right” k depends on the collection: – How specialized is it? – Are there special types of documents?
What’s the k?
59Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Landauer and Dumais (1997) evaluated retrieval performance as a function of k:
What’s the k? (2)
60Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Pros – Very good retrieval quality – Reasonable mathematical foundations – General tool for different purposes
• Cons – Latent dimensions found might be difficult to interpret – High computational requirements – The “right” k is hard to find
Pros and Cons
61Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Netflix: Large DVD rental service • The Netflix Prize – http://www.netflixprize.com – Win $1,000,000 • Dataset of customers’ DVD ratings: – 480,189 customers – 17,700 movies – 100,480,507 ratings (scale: 1–5) – Density of rating matrix: 0.012 • Task: Estimate 2,817,131 ratings not published by Netflix
The Netflix Prize
62Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
• Computing a (sort of) SVD on the rating matrix has been proved to be highly successful • Main problem here: The matrix is very sparse! – Sparse means missing knowledge (in contrast to LSI!)
The Netflix Prize (2)
63Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
The Netflix Prize (3)
Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig 64
• Each movie can be represented as a point in some k-dimensional coordinate space • Many interesting applications
• Finding similar movies:
SVD on Rating Data
65Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Rocky (1976) Dirty Dancing (1987) The Birds (1963) Rocky II (1979) Pretty Woman (1990) Psycho (1960) Rocky III (1982) Footloose (1984) Vertigo (1958) Hoosiers (1986) Grease (1978) Rear Window (1954) The Natural (1984) Ghost (1990) North By Northwest (1959) The Karate Kid (1984) Flashdance (1983) Dial M for Murder (1954)
• Automatically reweighting genre assignments:
SVD on Rating Data (2)
66Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig
Movie IMDb’s genres Reweighted genres Back to the Future III (1990) Adventure | Comedy | Family | Sci-Fi | Western Adventure Comedy Family Sci-Fi  Western Rocky (1976) Drama | Romance | Sport Drama Romance Sport Star Trek (1979) Action | Adventure | Mystery | Sci-Fi Action Adventure Mystery Sci-Fi Titanic (1997) Adventure | Drama | History | Romance Adventure Drama History Romance
• Language models • What is relevance? • Evaluation of retrieval quality
Next Lecture
67Information Retrieval and Web Search Engines — Wolf-Tilo Balke — Technische Universität Braunschweig